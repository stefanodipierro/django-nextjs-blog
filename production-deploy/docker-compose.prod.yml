services:
  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    depends_on:
      - django
      - frontend
    restart: unless-stopped

  # Django backend service
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
    expose:
      - "8000"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn blog.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod
    expose:
      - "5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and Celery
  redis:
    image: redis:6-alpine
    expose:
      - "6379"
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Celery worker for background tasks
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A blog worker -l INFO --concurrency=2
    volumes:
      - ./backend:/app
      - media_volume:/app/mediafiles
    env_file:
      - ./.env.prod
    depends_on:
      - django
      - redis
      - db
    restart: unless-stopped

  # Celery beat for scheduled tasks
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A blog beat -l INFO
    volumes:
      - ./backend:/app
    env_file:
      - ./.env.prod
    depends_on:
      - celery
      - redis
      - django
    restart: unless-stopped

  # Next.js frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    volumes:
      - ./frontend:/app
      - /app/node_modules
    expose:
      - "3000"
    env_file:
      - ./.env.prod
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://217.65.144.19/api/v1
      - NEXT_PUBLIC_INTERNAL_API_URL=http://django:8000/api/v1
      - NEXT_PUBLIC_SITE_URL=http://217.65.144.19
    depends_on:
      - django
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
  redis_data: 