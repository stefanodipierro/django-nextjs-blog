services:
  # Django backend service
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    restart: on-failure

  # PostgreSQL database
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.dev
    ports:
      - "5432:5432"
    restart: on-failure

  # Redis for caching and Celery
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    restart: on-failure

  # Celery worker for background tasks
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A blog worker -l INFO
    volumes:
      - ./backend:/app
    env_file:
      - ./.env.dev
    depends_on:
      - django
      - redis
    restart: on-failure

  # Next.js frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    env_file:
      - ./.env.dev
    depends_on:
      - django
    command: yarn dev
    restart: on-failure

volumes:
  postgres_data:
  static_volume:
  media_volume: 